---
// Capture the props passed from the parent component
const { caption, bio, image } = Astro.props;
---

<div>
  <!-- Accordion button -->
  <button class="accordion text-4xl">{caption}</button>

  <!-- Panel section with grid layout for text and image -->
  <div class="panel grid grid-cols-1 md:grid-cols-2 gap-4 items-start overflow-hidden max-h-0 transition-[max-height] duration-300 ease-in-out">
    <p>{bio}</p>
    <img src={image} alt="" class="max-w-full h-auto">
  </div>
</div>

<style>
  .accordion {
    cursor: pointer;
    padding: 18px;
    width: 100%;
    text-align: left;
    border: none;
    outline: none;
    transition: 0.4s;
  }

  .panel {
    padding: 0 18px;
    background-color: white;
    max-height: 0; /* Hidden by default */
  }

  /* Active state for expanding the accordion */
  .panel.active {
    max-height: 1000px; /* Arbitrary large max-height to reveal content */
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const accordions = document.getElementsByClassName("accordion");

    for (let i = 0; i < accordions.length; i++) {
      accordions[i].addEventListener("click", function() {
        this.classList.toggle("active");
        
        const panel = this.nextElementSibling;
        
        // Toggle the 'active' class on the panel to control max-height
        panel.classList.toggle("active");
      });
    }
  });
</script>


<!-- fungerande accordion men inte med bild/text bredvid -->
<!-- ---
// Capture the props passed from the parent component
const { caption, bio } = Astro.props;
---

<div>
  <button class="accordion text-4xl">{caption}</button>
  <div class="panel flex flex-col gap-4">
    <p>{bio}</p>
    <img src="image.png" alt="">
  </div>
</div>

<style>
  .accordion {
    cursor: pointer;
    padding: 18px;
    width: 100%;
    text-align: left;
    border: none;
    outline: none;
    transition: 0.4s;
  }

  /* .active, .accordion:hover {
    background-color: #ccc;
  } */

  .panel {
    padding: 0 18px;
    background-color: white;
    display: none;
    overflow: hidden;
  }
</style>

<script>
  // Wait for the DOM to load
  document.addEventListener('DOMContentLoaded', function () {
    var acc = document.getElementsByClassName("accordion");
    
    for (let i = 0; i < acc.length; i++) {
      acc[i].addEventListener("click", function() {
        this.classList.toggle("active");
        var panel = this.nextElementSibling;
        panel.style.display = panel.style.display === "block" ? "none" : "block";
      });
    }
  });
</script>

 -->


